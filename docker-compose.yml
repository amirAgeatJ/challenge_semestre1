version: '3'
services:

  ##########################################################################
  # PHP Apache
  ##########################################################################
  # Ce conteneur est un serveur web Apache avec PHP.
  php-apache:
    container_name: php_apache
    build: site # On utilise le Dockerfile du dossier site
    ports:
      - "80:80" # On expose le port 80 du conteneur
    volumes:
      - ./www:/var/www/html/ # On monte le dossier www du projet dans le dossier /var/www/html/ du conteneur
      - ./server/000-default.conf:/etc/apache2/sites-available/000-default.conf # On monte le fichier de configuration du serveur Apache
      - ./server/apache2.conf:/etc/apache2/apache2.conf # On monte le fichier de configuration du serveur Apache
      - ./server/php.ini:/usr/local/etc/php/php.ini # On monte le fichier de configuration de PHP
      - ./server/ports.conf:/etc/apache2/ports.conf # On monte le fichier de configuration des ports du serveur Apache
    networks:
      - backend # Conteneur connecté au réseau backend

  ##########################################################################
  # Base de données PostgreSQL
  ##########################################################################
  # Ce conteneur est une base de données PostgreSQL.
  db:
    image: postgres:latest # On utilise l'image PostgreSQL
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER} # On crée un utilisateur
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # On définit le mot de passe de l'utilisateur
      POSTGRES_DB: ${POSTGRES_DB} # On crée une base de données
    volumes:
      - ./db:/var/lib/postgresql/data # On monte le dossier db du projet dans le dossier /var/lib/postgresql/data du conteneur
    networks:
      - backend # Conteneur connecté au réseau backend

  ##########################################################################
  # Interface pour PostgreSQL
  ##########################################################################
  # Ce conteneur est une interface web pour gérer la base de données.
  pgadmin:
    image: dpage/pgadmin4 # On utilise l'image PGAdmin
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} # On définit l'email de l'utilisateur
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} # On définit le mot de passe de l'utilisateur
    ports:
      - "5050:80" # On expose le port 80 du conteneur
    depends_on:
      - db # On attend que le conteneur db soit démarré
    networks:
      - backend # Conteneur connecté au réseau backend

networks:
  backend: # On crée un réseau backend